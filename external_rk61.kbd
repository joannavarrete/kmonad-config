(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-id/usb-HyphaRF_RK61-if02-event-kbd")
  output (uinput-sink "My KMonad output"
    ;; To understand the importance of the following line, see the section on
    ;; Compose-key sequences at the near-bottom of this file.
    "/run/current-system/sw/bin/sleep 1 && /run/current-system/sw/bin/setxkbmap -option compose:ralt")
  cmp-seq ralt    ;; Set the compose key to `RightAlt'
  cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; Comment this if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)

(defsrc
  esc  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  lctl a    s    d    f    g    h    j    k    l    ;    '         ret
  lsft z    x    c    v    b    n    m    ,    .    /              rsft
  caps lmet lalt           spc              ralt   rctl menu
)

;; Make left-control esc on tap, control on hold
(defalias cesc (tap-next esc lctl))

;; Navigation layer
(defalias 
 nav (layer-toggle navigation)
 tnav (tap-hold 200 a @nav)
)

;; Symbol layer
(defalias 
 symbol (layer-toggle symbols)
 tsy (tap-hold 200 spc @symbol)
)

;; Intellij layer
(defalias
 lintellij (layer-toggle intellij)
 tide (tap-hold 200 s @lintellij)
)

;; Move window to the monitor to the left
(defalias wle (around lmet (around lsft left)))

;; Move window to the monitor to the right
(defalias wrh (around lmet (around lsft rght)))

;; Switch between two most recent windows
(defalias swi (tap-macro A-esc))

;; Switch between two most recent windows of an application
(defalias cip A-f6)

(defalias 
 kil A-f4
 max A-f10
)

;; Intellij
;; Navigation Go Back
(defalias bck A-S-left)

;; Navigation Go Forward
(defalias fwd A-S-rght)

;; Go To Type Declaration
(defalias gttd C-S-b)

;; Go to
(defalias gt C-b)

;; Go to test class
(defalias gtt C-S-T)

;; Run Tests
(defalias rtest C-S-f10)

;; Move tab to opposite split 
(defalias mppo C-A-S-q)

;; Move cursor to opposite split 
(defalias cppo C-A-S-o)

;; Split right  
(defalias spri C-A-S-u)

;; Maximize and Normalize Splits 
(defalias maxSp C-A-S-f9)

;; Rename variable
(defalias ren S-f6)

;; Clean screen
(defalias cln C-S-f12)

;; Show Methods
(defalias smt C-f12)

(defalias pss #(i U # g X s Q X P r 0 o $ w 5 s))

(deflayer firstlayer 
  esc  1    2     3     4    5    6    7    8    9    0    -    =    bspc
  tab  q    w     e     r    t    y    u    i    o    p    [    ]    \
  @cesc   @tnav  @tide  d    f    g    h    j    k    l    ;    '    ret
  lsft z    x     c     v    b    n    m    ,    .    /              rsft
  caps lmet lalt           @tsy             ralt   rctl menu
)

(deflayer navigation 
  _  _   _    _    _    _    _       _      _      _      _     _    _   _
  _  _   _    _    _    _    _     home    pgdn   pgup   end    _    _   _
  _  _  lmet @cip  @swi   _   left   down     up   right    _     _        _
  _      _    _  cmp    _    _     @wle    @max   @kil    _   @wrh   _   
  _  _   _                        _                       _     _    _   
)

(deflayer symbols
  _  _   _    _    _    _    _    _    _    _    _    _    _    _
  _  _   <    $    >    _    _    [    \_   ]    _    _    _    _
  -  \   \(   "    \)   #    %    {    =    }    ;    |    _    _
  _      :    *    +    _    @    &    ^    ~    _    _       
  _  _   _                        _              _    _    _    
)

(deflayer intellij 
  _  _   _    _     _       _        _     _        _       _        _      _    _    _
  _  _   _    f2    @ren   @rtest    _     @smt     @spri   @cppo   @mppo   _    _    _
  _  _   _  @gttd   @gt    @gtt      _     @bck     @fwd    _        _      _      _
  _      _    _     @cln   _      _     _  @maxSp   _      _    _    _    
  _  _   _                        @pss              _      _    _    
)

(deflayer empty 
  _  _   _    _    _    _    _     _     _     _    _    _    _   _  
  _  _   _    _    _    _    _     _     _     _    _    _    _   _ 
  _  _   _    _    _    _    _     _     _     _    _    _    _    
  _      _    _    _    _    _     _     _     _    _    _        _ 
  _  _   _                        _                 _    _    _ 
)

